using Тумаков___Лабораторная_7_главы;
using Тумаков___Лабораторная_7_главы.Classes;

public class MainClass
{
    public static void Main()
    {
       Task123();
       Task4();
    }
    public static void Task123()
    {
        Console.WriteLine("Упражнение 7.1, Упражнение 7.2, Упражнение 7.3\n");
        //Создать класс счет в банке с закрытыми полями: номер счета, баланс, тип
        //банковского счета(использовать перечислимый тип из упр. 3.1). Предусмотреть методы для
        //доступа к данным – заполнения и чтения.Создать объект класса, заполнить его поля и
        //вывести информацию об объекте класса на печать.

        //Изменить класс счет в банке из упражнения 7.1 таким образом, чтобы
        //номер счета генерировался сам и был уникальным.Для этого надо создать в классе
        //статическую переменную и метод, который увеличивает значение этого переменной.

        //Добавить в класс счет в банке два метода: снять со счета и положить на
        //счет.Метод снять со счета проверяет, возможно ли снять запрашиваемую сумму, и в случае
        //положительного результата изменяет баланс.

        BankAccount account1 = new BankAccount("2200255555555555", 1000.00m, AccountType.Текущий);
        BankAccount account2 = new BankAccount(1000.00m, AccountType.Накопительный);
        
        account1.ShowAccountInfo();
        account2.ShowAccountInfo();
        
        account1.Deposit(500.00m);
        account1.Withdraw(300.00m);
        account1.Withdraw(1500.00m);

       
        account1.ShowAccountInfo();
    }
    public static void Task4()
    {
        Console.WriteLine("\nУпражнение 7.1\n");
        //Реализовать класс для описания здания (уникальный номер здания,
        //высота, этажность, количество квартир, подъездов). Поля сделать закрытыми,
        //предусмотреть методы для заполнения полей и получения значений полей для печати.
        //Добавить методы вычисления высоты этажа, количества квартир в подъезде, количества
        //квартир на этаже и т.д.Предусмотреть возможность, чтобы уникальный номер здания
        //генерировался программно.Для этого в классе предусмотреть статическое поле, которое бы
        //хранило последний использованный номер здания, и предусмотреть метод, который
        //увеличивал бы значение этого поля.

        Building building1 = new Building(height: 30.0, floors: 10, flats: 100, entrances: 2);
        building1.ShowBuildingInfo();

        Console.WriteLine();

        Building building2 = new Building(height: 45.0, floors: 15, flats: 150, entrances: 3);
        building2.ShowBuildingInfo();
    }
}
